{
    "sourceFile": "src/test/java/com/edurbs/xavantespellingconverter/domain/service/ConvertSpellingServiceTest.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 20,
            "patches": [
                {
                    "date": 1670374910639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1670374941226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,12 @@\n package com.edurbs.xavantespellingconverter.domain.service;\r\n \r\n import org.junit.jupiter.api.Test;\r\n+import org.springframework.boot.test.context.SpringBootTest;\r\n \r\n+@SpringBootTest\r\n public class ConvertSpellingServiceTest {\r\n+    \r\n     @Test\r\n     void testConvert() {\r\n \r\n     }\r\n"
                },
                {
                    "date": 1670375256095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,21 @@\n package com.edurbs.xavantespellingconverter.domain.service;\r\n \r\n+import org.junit.jupiter.api.BeforeAll;\r\n import org.junit.jupiter.api.Test;\r\n import org.springframework.boot.test.context.SpringBootTest;\r\n \r\n @SpringBootTest\r\n public class ConvertSpellingServiceTest {\r\n-    \r\n+\r\n+    private String textToConvert;\r\n+\r\n+    @BeforeAll\r\n+    public void prepare(){\r\n+        String textToConvert = \"\";\r\n+    }\r\n+\r\n     @Test\r\n-    void testConvert() {\r\n+    public void givenText_whenConvert_thenRerturnTextConverted() {\r\n \r\n     }\r\n }\r\n"
                },
                {
                    "date": 1670375384613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,12 +10,12 @@\n     private String textToConvert;\r\n \r\n     @BeforeAll\r\n     public void prepare(){\r\n-        String textToConvert = \"\";\r\n+        String textToConvert = \"Zuwã Batista te te dama irotizé wasuꞌu3 Tawamhã 15 na ma tô ãma tiwahu, Tibériuhu ãma, danhibꞌapito na ꞌre hâimana mono ré, Roma ãma hã. Isadawa para, te Põsiu Pilatu hã te te dama ꞌre roti, Zudéa ãma. Duré Erodi hã te te dama ꞌre roti isadawa para, Galiléa ãma. Duré Erodihi no hã Filipi hã te te dama ꞌre roti, isadawa para, Itureza na danhiptiꞌa nhoꞌõmo nhisi ãma, duré Taraconiti na danhiptiꞌa nhoꞌõmo nhisi ãma. Duré Risãniza hã te te dama ꞌre roti, isadawa para, Abireni na danhiptiꞌa nhoꞌõmo nhisi ãma.2 Duré Anasi hã, Caifasihi me, dama pire uptabi na te ꞌre tineb zahuré, sasedoti na hã. Uburé ꞌRe ihâimana uꞌâsi mono ma, daꞌãma romhuriꞌwa norĩ ma, pire zahuré di. Ãne wamhã, ma tô ꞌRe ihâimana uꞌâsi mono hã timreme hã Zuwãhã ma tisõ, aꞌubuni u ꞌre sãmra mono ré. Zacariaha ꞌra, Zuwã hã. Isadawa para te te dama ꞌre roti mono da, ma tô timreme hã tãma tisõ.3 Tahawa, Zuwã hã te oto datẽme ꞌre mo, Zodã pa ꞌrata, ꞌre isiꞌubumroi mono norĩ u. Tawamhã datẽme ꞌre morĩ wamhã, ãne te te dama ꞌre roti: — Maꞌãpé, aiwasété wi aipizari zaꞌra waꞌaba, ꞌRe ihâimana uꞌâsi mono, marĩ ꞌre iꞌmanharĩ wasété zaꞌra waꞌaba mono zé hã te te aima pari zaꞌra waꞌaba da. Tawamhã â dawabzuri hã wa za te aima ꞌre abꞌmanharĩ ꞌwa.\";\r\n     }\r\n \r\n     @Test\r\n     public void givenText_whenConvert_thenRerturnTextConverted() {\r\n-\r\n+        Assert.\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1670375832142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,27 @@\n package com.edurbs.xavantespellingconverter.domain.service;\r\n \r\n import org.junit.jupiter.api.BeforeAll;\r\n import org.junit.jupiter.api.Test;\r\n+import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.boot.test.context.SpringBootTest;\r\n \r\n @SpringBootTest\r\n public class ConvertSpellingServiceTest {\r\n \r\n     private String textToConvert;\r\n \r\n+    @Autowired\r\n+    private ConvertSpellingService convertSpellingService;\r\n+\r\n     @BeforeAll\r\n     public void prepare(){\r\n         String textToConvert = \"Zuwã Batista te te dama irotizé wasuꞌu3 Tawamhã 15 na ma tô ãma tiwahu, Tibériuhu ãma, danhibꞌapito na ꞌre hâimana mono ré, Roma ãma hã. Isadawa para, te Põsiu Pilatu hã te te dama ꞌre roti, Zudéa ãma. Duré Erodi hã te te dama ꞌre roti isadawa para, Galiléa ãma. Duré Erodihi no hã Filipi hã te te dama ꞌre roti, isadawa para, Itureza na danhiptiꞌa nhoꞌõmo nhisi ãma, duré Taraconiti na danhiptiꞌa nhoꞌõmo nhisi ãma. Duré Risãniza hã te te dama ꞌre roti, isadawa para, Abireni na danhiptiꞌa nhoꞌõmo nhisi ãma.2 Duré Anasi hã, Caifasihi me, dama pire uptabi na te ꞌre tineb zahuré, sasedoti na hã. Uburé ꞌRe ihâimana uꞌâsi mono ma, daꞌãma romhuriꞌwa norĩ ma, pire zahuré di. Ãne wamhã, ma tô ꞌRe ihâimana uꞌâsi mono hã timreme hã Zuwãhã ma tisõ, aꞌubuni u ꞌre sãmra mono ré. Zacariaha ꞌra, Zuwã hã. Isadawa para te te dama ꞌre roti mono da, ma tô timreme hã tãma tisõ.3 Tahawa, Zuwã hã te oto datẽme ꞌre mo, Zodã pa ꞌrata, ꞌre isiꞌubumroi mono norĩ u. Tawamhã datẽme ꞌre morĩ wamhã, ãne te te dama ꞌre roti: — Maꞌãpé, aiwasété wi aipizari zaꞌra waꞌaba, ꞌRe ihâimana uꞌâsi mono, marĩ ꞌre iꞌmanharĩ wasété zaꞌra waꞌaba mono zé hã te te aima pari zaꞌra waꞌaba da. Tawamhã â dawabzuri hã wa za te aima ꞌre abꞌmanharĩ ꞌwa.\";\r\n     }\r\n \r\n     @Test\r\n-    public void givenText_whenConvert_thenRerturnTextConverted() {\r\n-        Assert.\r\n+    public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n+        String nameToConvert = \"Ãtipatiridi\";\r\n+        String nameConverted = convertSpellingService.convert(nameToConvert);\r\n+        Assert\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1670375905956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,10 @@\n import org.junit.jupiter.api.Test;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.boot.test.context.SpringBootTest;\r\n \r\n+import static org.assertj.core.api.Assertions.*;\r\n+\r\n @SpringBootTest\r\n public class ConvertSpellingServiceTest {\r\n \r\n     private String textToConvert;\r\n@@ -20,8 +22,9 @@\n \r\n     @Test\r\n     public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n         String nameToConvert = \"Ãtipatiridi\";\r\n+        String nameExpected = \"Ãtipatiridi\";\r\n         String nameConverted = convertSpellingService.convert(nameToConvert);\r\n         Assert\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1670375932122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,10 +21,10 @@\n     }\r\n \r\n     @Test\r\n     public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n-        String nameToConvert = \"Ãtipatiridi\";\r\n-        String nameExpected = \"Ãtipatiridi\";\r\n+        String nameToConvert = \"Ananidza\";\r\n+        String nameExpected = \"Ananias\";\r\n         String nameConverted = convertSpellingService.convert(nameToConvert);\r\n         Assert\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1670376023056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,7 +24,7 @@\n     public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n         String nameToConvert = \"Ananidza\";\r\n         String nameExpected = \"Ananias\";\r\n         String nameConverted = convertSpellingService.convert(nameToConvert);\r\n-        Assert\r\n+        assertThat(nameConverted).isEqualTo(nameExpected);\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1670376075551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     private ConvertSpellingService convertSpellingService;\r\n \r\n     @BeforeAll\r\n     public void prepare(){\r\n-        String textToConvert = \"Zuwã Batista te te dama irotizé wasuꞌu3 Tawamhã 15 na ma tô ãma tiwahu, Tibériuhu ãma, danhibꞌapito na ꞌre hâimana mono ré, Roma ãma hã. Isadawa para, te Põsiu Pilatu hã te te dama ꞌre roti, Zudéa ãma. Duré Erodi hã te te dama ꞌre roti isadawa para, Galiléa ãma. Duré Erodihi no hã Filipi hã te te dama ꞌre roti, isadawa para, Itureza na danhiptiꞌa nhoꞌõmo nhisi ãma, duré Taraconiti na danhiptiꞌa nhoꞌõmo nhisi ãma. Duré Risãniza hã te te dama ꞌre roti, isadawa para, Abireni na danhiptiꞌa nhoꞌõmo nhisi ãma.2 Duré Anasi hã, Caifasihi me, dama pire uptabi na te ꞌre tineb zahuré, sasedoti na hã. Uburé ꞌRe ihâimana uꞌâsi mono ma, daꞌãma romhuriꞌwa norĩ ma, pire zahuré di. Ãne wamhã, ma tô ꞌRe ihâimana uꞌâsi mono hã timreme hã Zuwãhã ma tisõ, aꞌubuni u ꞌre sãmra mono ré. Zacariaha ꞌra, Zuwã hã. Isadawa para te te dama ꞌre roti mono da, ma tô timreme hã tãma tisõ.3 Tahawa, Zuwã hã te oto datẽme ꞌre mo, Zodã pa ꞌrata, ꞌre isiꞌubumroi mono norĩ u. Tawamhã datẽme ꞌre morĩ wamhã, ãne te te dama ꞌre roti: — Maꞌãpé, aiwasété wi aipizari zaꞌra waꞌaba, ꞌRe ihâimana uꞌâsi mono, marĩ ꞌre iꞌmanharĩ wasété zaꞌra waꞌaba mono zé hã te te aima pari zaꞌra waꞌaba da. Tawamhã â dawabzuri hã wa za te aima ꞌre abꞌmanharĩ ꞌwa.\";\r\n+        textToConvert = \"Zuwã Batista te te dama irotizé wasuꞌu3 Tawamhã 15 na ma tô ãma tiwahu, Tibériuhu ãma, danhibꞌapito na ꞌre hâimana mono ré, Roma ãma hã. Isadawa para, te Põsiu Pilatu hã te te dama ꞌre roti, Zudéa ãma. Duré Erodi hã te te dama ꞌre roti isadawa para, Galiléa ãma. Duré Erodihi no hã Filipi hã te te dama ꞌre roti, isadawa para, Itureza na danhiptiꞌa nhoꞌõmo nhisi ãma, duré Taraconiti na danhiptiꞌa nhoꞌõmo nhisi ãma. Duré Risãniza hã te te dama ꞌre roti, isadawa para, Abireni na danhiptiꞌa nhoꞌõmo nhisi ãma.2 Duré Anasi hã, Caifasihi me, dama pire uptabi na te ꞌre tineb zahuré, sasedoti na hã. Uburé ꞌRe ihâimana uꞌâsi mono ma, daꞌãma romhuriꞌwa norĩ ma, pire zahuré di. Ãne wamhã, ma tô ꞌRe ihâimana uꞌâsi mono hã timreme hã Zuwãhã ma tisõ, aꞌubuni u ꞌre sãmra mono ré. Zacariaha ꞌra, Zuwã hã. Isadawa para te te dama ꞌre roti mono da, ma tô timreme hã tãma tisõ.3 Tahawa, Zuwã hã te oto datẽme ꞌre mo, Zodã pa ꞌrata, ꞌre isiꞌubumroi mono norĩ u. Tawamhã datẽme ꞌre morĩ wamhã, ãne te te dama ꞌre roti: — Maꞌãpé, aiwasété wi aipizari zaꞌra waꞌaba, ꞌRe ihâimana uꞌâsi mono, marĩ ꞌre iꞌmanharĩ wasété zaꞌra waꞌaba mono zé hã te te aima pari zaꞌra waꞌaba da. Tawamhã â dawabzuri hã wa za te aima ꞌre abꞌmanharĩ ꞌwa.\";\r\n     }\r\n \r\n     @Test\r\n     public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n"
                },
                {
                    "date": 1670376120547,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,18 +9,12 @@\n \r\n @SpringBootTest\r\n public class ConvertSpellingServiceTest {\r\n \r\n-    private String textToConvert;\r\n \r\n     @Autowired\r\n     private ConvertSpellingService convertSpellingService;\r\n \r\n-    @BeforeAll\r\n-    public void prepare(){\r\n-        textToConvert = \"Zuwã Batista te te dama irotizé wasuꞌu3 Tawamhã 15 na ma tô ãma tiwahu, Tibériuhu ãma, danhibꞌapito na ꞌre hâimana mono ré, Roma ãma hã. Isadawa para, te Põsiu Pilatu hã te te dama ꞌre roti, Zudéa ãma. Duré Erodi hã te te dama ꞌre roti isadawa para, Galiléa ãma. Duré Erodihi no hã Filipi hã te te dama ꞌre roti, isadawa para, Itureza na danhiptiꞌa nhoꞌõmo nhisi ãma, duré Taraconiti na danhiptiꞌa nhoꞌõmo nhisi ãma. Duré Risãniza hã te te dama ꞌre roti, isadawa para, Abireni na danhiptiꞌa nhoꞌõmo nhisi ãma.2 Duré Anasi hã, Caifasihi me, dama pire uptabi na te ꞌre tineb zahuré, sasedoti na hã. Uburé ꞌRe ihâimana uꞌâsi mono ma, daꞌãma romhuriꞌwa norĩ ma, pire zahuré di. Ãne wamhã, ma tô ꞌRe ihâimana uꞌâsi mono hã timreme hã Zuwãhã ma tisõ, aꞌubuni u ꞌre sãmra mono ré. Zacariaha ꞌra, Zuwã hã. Isadawa para te te dama ꞌre roti mono da, ma tô timreme hã tãma tisõ.3 Tahawa, Zuwã hã te oto datẽme ꞌre mo, Zodã pa ꞌrata, ꞌre isiꞌubumroi mono norĩ u. Tawamhã datẽme ꞌre morĩ wamhã, ãne te te dama ꞌre roti: — Maꞌãpé, aiwasété wi aipizari zaꞌra waꞌaba, ꞌRe ihâimana uꞌâsi mono, marĩ ꞌre iꞌmanharĩ wasété zaꞌra waꞌaba mono zé hã te te aima pari zaꞌra waꞌaba da. Tawamhã â dawabzuri hã wa za te aima ꞌre abꞌmanharĩ ꞌwa.\";\r\n-    }\r\n-\r\n     @Test\r\n     public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n         String nameToConvert = \"Ananidza\";\r\n         String nameExpected = \"Ananias\";\r\n"
                },
                {
                    "date": 1670376166117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     private ConvertSpellingService convertSpellingService;\r\n \r\n     @Test\r\n     public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n-        String nameToConvert = \"Ananidza\";\r\n+        String nameToConvert = \"Ananidza, Provébius, \";\r\n         String nameExpected = \"Ananias\";\r\n         String nameConverted = convertSpellingService.convert(nameToConvert);\r\n         assertThat(nameConverted).isEqualTo(nameExpected);\r\n     }\r\n"
                },
                {
                    "date": 1670376188954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n     private ConvertSpellingService convertSpellingService;\r\n \r\n     @Test\r\n     public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n-        String nameToConvert = \"Ananidza, Provébius, \";\r\n-        String nameExpected = \"Ananias\";\r\n+        String nameToConvert = \"Ananidza, Provébius, Dzedzu, Abé\";\r\n+        String nameExpected = \"Ananias, Provérbios, Jesus, Abel\";\r\n         String nameConverted = convertSpellingService.convert(nameToConvert);\r\n         assertThat(nameConverted).isEqualTo(nameExpected);\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1670376205454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n     private ConvertSpellingService convertSpellingService;\r\n \r\n     @Test\r\n     public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n-        String nameToConvert = \"Ananidza, Provébius, Dzedzu, Abé\";\r\n-        String nameExpected = \"Ananias, Provérbios, Jesus, Abel\";\r\n+        String nameToConvert = \"Ananidza, Provébius, Dzedzu, Abé, Abi'ata\";\r\n+        String nameExpected = \"Ananias, Provérbios, Jesus, Abel, Abiatar\";\r\n         String nameConverted = convertSpellingService.convert(nameToConvert);\r\n         assertThat(nameConverted).isEqualTo(nameExpected);\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1670376296996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,6 +19,8 @@\n         String nameToConvert = \"Ananidza, Provébius, Dzedzu, Abé, Abi'ata\";\r\n         String nameExpected = \"Ananias, Provérbios, Jesus, Abel, Abiatar\";\r\n         String nameConverted = convertSpellingService.convert(nameToConvert);\r\n         assertThat(nameConverted).isEqualTo(nameExpected);\r\n+\r\n+        \r\n     }\r\n }\r\n"
                },
                {
                    "date": 1670376533317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,9 @@\n         String nameToConvert = \"Ananidza, Provébius, Dzedzu, Abé, Abi'ata\";\r\n         String nameExpected = \"Ananias, Provérbios, Jesus, Abel, Abiatar\";\r\n         String nameConverted = convertSpellingService.convert(nameToConvert);\r\n         assertThat(nameConverted).isEqualTo(nameExpected);\r\n+        when\r\n \r\n         \r\n     }\r\n }\r\n"
                },
                {
                    "date": 1670376788331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n package com.edurbs.xavantespellingconverter.domain.service;\r\n \r\n+import static org.junit.jupiter.api.Assumptions.assumeTrue;\r\n+\r\n import org.junit.jupiter.api.BeforeAll;\r\n import org.junit.jupiter.api.Test;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.boot.test.context.SpringBootTest;\r\n@@ -18,10 +20,12 @@\n     public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n         String nameToConvert = \"Ananidza, Provébius, Dzedzu, Abé, Abi'ata\";\r\n         String nameExpected = \"Ananias, Provérbios, Jesus, Abel, Abiatar\";\r\n         String nameConverted = convertSpellingService.convert(nameToConvert);\r\n+\r\n+        assumeThat\r\n         assertThat(nameConverted).isEqualTo(nameExpected);\r\n-        when\r\n+        \r\n \r\n         \r\n     }\r\n }\r\n"
                },
                {
                    "date": 1670376853040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n         String nameToConvert = \"Ananidza, Provébius, Dzedzu, Abé, Abi'ata\";\r\n         String nameExpected = \"Ananias, Provérbios, Jesus, Abel, Abiatar\";\r\n         String nameConverted = convertSpellingService.convert(nameToConvert);\r\n-\r\n+        assertjco\r\n         assumeThat\r\n         assertThat(nameConverted).isEqualTo(nameExpected);\r\n         \r\n \r\n"
                },
                {
                    "date": 1670377214392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,10 @@\n package com.edurbs.xavantespellingconverter.domain.service;\r\n \r\n-import static org.junit.jupiter.api.Assumptions.assumeTrue;\r\n \r\n-import org.junit.jupiter.api.BeforeAll;\r\n+import static org.mockito.BDDMockito.*;\r\n+\r\n+\r\n import org.junit.jupiter.api.Test;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.boot.test.context.SpringBootTest;\r\n \r\n@@ -20,11 +21,11 @@\n     public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n         String nameToConvert = \"Ananidza, Provébius, Dzedzu, Abé, Abi'ata\";\r\n         String nameExpected = \"Ananias, Provérbios, Jesus, Abel, Abiatar\";\r\n         String nameConverted = convertSpellingService.convert(nameToConvert);\r\n-        assertjco\r\n-        assumeThat\r\n-        assertThat(nameConverted).isEqualTo(nameExpected);\r\n+       \r\n+        given(convertSpellingService.setTextToConvert(nameToConvert);\r\n+\r\n         \r\n \r\n         \r\n     }\r\n"
                },
                {
                    "date": 1670377308110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,9 @@\n package com.edurbs.xavantespellingconverter.domain.service;\r\n \r\n+import static org.junit.jupiter.api.Assumptions.assumeTrue;\r\n \r\n-import static org.mockito.BDDMockito.*;\r\n-\r\n-\r\n+import org.junit.jupiter.api.BeforeAll;\r\n import org.junit.jupiter.api.Test;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.boot.test.context.SpringBootTest;\r\n \r\n@@ -21,11 +20,10 @@\n     public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n         String nameToConvert = \"Ananidza, Provébius, Dzedzu, Abé, Abi'ata\";\r\n         String nameExpected = \"Ananias, Provérbios, Jesus, Abel, Abiatar\";\r\n         String nameConverted = convertSpellingService.convert(nameToConvert);\r\n-       \r\n-        given(convertSpellingService.setTextToConvert(nameToConvert);\r\n \r\n+        assertThat(nameConverted).isEqualTo(nameExpected);\r\n         \r\n \r\n         \r\n     }\r\n"
                },
                {
                    "date": 1670377349866,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \r\n     @Test\r\n     public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n         String nameToConvert = \"Ananidza, Provébius, Dzedzu, Abé, Abi'ata\";\r\n-        String nameExpected = \"Ananias, Provérbios, Jesus, Abel, Abiatar\";\r\n+        String nameExpected = \"Ananidas, Provérbios, Jesus, Abel, Abiatar\";\r\n         String nameConverted = convertSpellingService.convert(nameToConvert);\r\n \r\n         assertThat(nameConverted).isEqualTo(nameExpected);\r\n         \r\n"
                },
                {
                    "date": 1670377390451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,12 @@\n package com.edurbs.xavantespellingconverter.domain.service;\r\n \r\n-import static org.junit.jupiter.api.Assumptions.assumeTrue;\r\n+import static org.assertj.core.api.Assertions.assertThat;\r\n \r\n-import org.junit.jupiter.api.BeforeAll;\r\n import org.junit.jupiter.api.Test;\r\n import org.springframework.beans.factory.annotation.Autowired;\r\n import org.springframework.boot.test.context.SpringBootTest;\r\n \r\n-import static org.assertj.core.api.Assertions.*;\r\n-\r\n @SpringBootTest\r\n public class ConvertSpellingServiceTest {\r\n \r\n \r\n@@ -18,13 +15,10 @@\n \r\n     @Test\r\n     public void givenNamePartialConverted_whenConvert_thenReturnNameConverted() {\r\n         String nameToConvert = \"Ananidza, Provébius, Dzedzu, Abé, Abi'ata\";\r\n-        String nameExpected = \"Ananidas, Provérbios, Jesus, Abel, Abiatar\";\r\n+        String nameExpected = \"Ananias, Provérbios, Jesus, Abel, Abiatar\";\r\n         String nameConverted = convertSpellingService.convert(nameToConvert);\r\n \r\n         assertThat(nameConverted).isEqualTo(nameExpected);\r\n-        \r\n-\r\n-        \r\n     }\r\n }\r\n"
                }
            ],
            "date": 1670374910639,
            "name": "Commit-0",
            "content": "package com.edurbs.xavantespellingconverter.domain.service;\r\n\r\nimport org.junit.jupiter.api.Test;\r\n\r\npublic class ConvertSpellingServiceTest {\r\n    @Test\r\n    void testConvert() {\r\n\r\n    }\r\n}\r\n"
        }
    ]
}